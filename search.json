[{"path":[]},{"path":"https://marce10.github.io/Rraven/articles/Rraven.html","id":"imp_raven","dir":"Articles","previous_headings":"Importing data from Raven","what":"imp_raven","title":"<center><font size=","text":"function imports Raven selection tables. Multiple files can imported . Raven selection tables including data multiple recordings can also imported. returns single data frame information contained selection files. already 2 Raven selection tables working directory:   code shows import data contained files R:   Note ‘waveform’ view data removed. can also imported follows (note example selection tables waveform data):   Raven selections can also imported ‘selection.table’ format can directly input warbleR functions. need set warbler.format = TRUE:   data frame contains following columns: sound.files, channel, selec, start, end, selec.file. can also import frequency range parameters ‘selection.table’ setting ‘freq.cols’ tp TRUE. data frame returned “imp_raven” (‘warbleR’ format) can input several warbleR functions analysis. instance, following code runs additional parameter measurements imported selections:   code creates song catalogs:  just mention analysis can implemented warbleR. Rraven also contains function imp_syrinx import selections Syrinx sound analysis software (although program maintained longer).","code":"list.files(path = tempdir(), pattern = \"\\\\.txt$\") [1] \"LBH 1 selection table example.txt\" \"LBH 2 selection table example.txt\" \"LBH 3 selection table example.txt\" \"LBH 4 selection table example.txt\" #providing the name of the column with the sound file names rvn.dat <- imp_raven(all.data = TRUE, path = tempdir())  head(rvn.dat) rvn.dat <- imp_raven(all.data = TRUE, waveform = TRUE,                       path = tempdir()) #providing the name of the column with the sound file names rvn.dat <- imp_raven(sound.file.col = \"End.File\",                       warbler.format =  TRUE, path = tempdir())  head(rvn.dat) # convert to class selection.table rvn.dat.st <- selection_table(rvn.dat, path = tempdir())  sp <- spectro_analysis(X = rvn.dat, bp = \"frange\", wl = 150,               pb = FALSE, ovlp = 90, path = tempdir())  head(sp)  [30mall selections are OK   [39m # create a color palette trc <- function(n) terrain.colors(n = n, alpha = 0.3)  # plot catalog catalog(X = rvn.dat.st[1:9, ], flim = c(1, 10), nrow = 3, ncol = 3,          same.time.scale = TRUE,  spec.mar = 1, box = FALSE,         ovlp = 90, parallel = 1, mar = 0.01, wl = 200,          pal = reverse.heat.colors, width = 20,         labels = c(\"sound.files\", \"selec\"), legend = 1,          tag.pal = list(trc),  group.tag = \"sound.files\", path = tempdir())"},{"path":"https://marce10.github.io/Rraven/articles/Rraven.html","id":"extract_ts","dir":"Articles","previous_headings":"Importing data from Raven","what":"extract_ts","title":"<center><font size=","text":"function extracts parameters encoded time series Raven selection tables. resulting data frame can directly input functions time series analysis acoustic signals warbleR function freq_DTW. function needs R data frame, data previously imported using imp_raven. example uses selection_file.ts example data comes Rraven:   Note sequences equal length (one NAs end). extract_ts can also interpolate values time series length:   length series can also specified:   time series data frame can directly input freq_DTW warbleR function calculate Dynamic Time Warping distances:  ","code":"#remove previous raven data files unlink(list.files(pattern = \"\\\\.txt$\", path = tempdir()))  #save Raven selection table in the temporary directory writeLines(selection_files[[5]], con = file.path(tempdir(),                                          names(selection_files)[5]))  rvn.dat <- imp_raven(all.data = TRUE, path = tempdir())   # Peak freq contour dif length fcts <- extract_ts(X = rvn.dat, ts.column = \"Peak Freq Contour (Hz)\")   head(fcts) # Peak freq contour equal length fcts <- extract_ts(X = rvn.dat, ts.column = \"Peak Freq Contour (Hz)\",  equal.length = TRUE)  #look at the last rows wit no NAs head(fcts) # Peak freq contour equal length 10 measurements fcts <- extract_ts(X = rvn.dat, ts.column = \"Peak Freq Contour (Hz)\", equal.length = T, length.out = 10)    head(fcts) freq_DTW(ts.df = fcts, path = tempdir()) calculating DTW distances, no progress bar ..."},{"path":"https://marce10.github.io/Rraven/articles/Rraven.html","id":"relabel_colms","dir":"Articles","previous_headings":"Importing data from Raven","what":"relabel_colms","title":"<center><font size=","text":"simple function relabel columns match selection table format used warbleR:   Additional columns can also relabeled:  ","code":"#to simplify the example select a subset of the columns  st1 <- rvn.dat[ ,1:7]  #check original column names st1 # Relabel the basic columns required by warbleR relabel_colms(st1) # 2 additional column  relabel_colms(st1, extra.cols.name = \"View\",               extra.cols.new.name = \"Raven view\")"},{"path":"https://marce10.github.io/Rraven/articles/Rraven.html","id":"imp_corr_mat","dir":"Articles","previous_headings":"Importing data from Raven","what":"imp_corr_mat","title":"<center><font size=","text":"function imports output batch correlation routine Raven. correlation lag matrices contained output ‘.txt’ file read waveform spectrogram (cross-correlation) correlations can imported. example shows input sound files Raven bring results back R. First, selections need cut single sound files Raven correlator able read . can using cut_sels function warbleR:   Every selection sound file (labeled paste(\"rownames\", \"sound.files\", \"selec\")). Now open Raven run batch correlator ‘cuts’ folder follows:   import output file R:   function returns list containing correlation matrix:     time lag matrix:     output ready stats. instance, following code runs mantel test cross-correlation (converted distances) warbleR spectral parameter pairwise dissimilarities:   actually good match two methods!","code":"#create new folder to put cuts dir.create(file.path(tempdir(), \"cuts\"))  # add a rowname column to be able to match cuts and selections lbh_selec_table$rownames <- sprintf(\"%02d\",1:nrow(lbh_selec_table))  # cut files cut_sels(X = lbh_selec_table, mar = 0.05, path = tempdir(), dest.path =             file.path(tempdir(), \"cuts\"),           labels = c(\"rownames\", \"sound.files\", \"selec\"), pb = FALSE)  #list cuts list.files(path = file.path(tempdir(), \"cuts\")) # Import output (change the name of the file if you used a different one) xcorr.rav <- imp_corr_mat(file = \"BatchCorrOutput.txt\", path = tempdir()) xcorr.rav$correlation xcorr.rav$`lag (s)` #convert cross-corr to distance xcorr.rvn <- 1- xcorr.rav$correlation  #sort matrix to match selection table xcorr.rvn <- xcorr.rvn[order(rownames(xcorr.rvn)), order(colnames(xcorr.rvn))]  #convert it to distance matrix xcorr.rvn <- as.dist(xcorr.rvn)  # measure acoustic parameters sp.wrblR <- spectro_analysis(lbh_selec_table, bp = c(1, 11), wl = 150,                     pb = FALSE, path = tempdir())  #convert them to distance matrix dist.sp.wrblR <- dist(sp.wrblR) Warning in dist(sp.wrblR): NAs introduced by coercion vegan::mantel(xcorr.rvn, dist.sp.wrblR) Mantel statistic based on Pearson's product-moment correlation   Call: vegan::mantel(xdis = xcorr.rvn, ydis = dist.sp.wrblR)   Mantel statistic r: 0.259        Significance: 0.021   Upper quantiles of permutations (null model):   90%   95% 97.5%   99%  0.134 0.181 0.232 0.300  Permutation: free Number of permutations: 999"},{"path":[]},{"path":"https://marce10.github.io/Rraven/articles/Rraven.html","id":"exp_raven","dir":"Articles","previous_headings":"Exporting R data to Raven","what":"exp_raven","title":"<center><font size=","text":"exp_raven saves selection table ‘.txt’ format can directly opened Raven. objects returned R environment. following code exports data table single sound file:   path sound file provided, functions exports ‘sound selection table’ can directly open Raven (also open associated sound file):   useful add new selections even new measurements:   several sound files available, users can either export single selection file multiple selection files (one sound file). example creates multiple sound file selection:   type tables can opened multiple file display Raven.","code":"# Select data for a single sound file st1 <- lbh_selec_table[lbh_selec_table$sound.files == \"Phae.long1.wav\", ]  # Export data of a single sound file exp_raven(st1, file.name = \"Phaethornis 1\", khz.to.hz = TRUE, path = tempdir()) # Select data for a single sound file st1 <- lbh_selec_table[lbh_selec_table$sound.files == \"Phae.long1.wav\",]  # Export data of a single sound file exp_raven(st1, file.name = \"Phaethornis 1\", khz.to.hz = TRUE,           sound.file.path = tempdir(), path = tempdir()) exp_raven(X = lbh_selec_table, file.name = \"Phaethornis multiple sound files\",            sound.file.path = tempdir(), single.file = TRUE, path = tempdir())"},{"path":[]},{"path":"https://marce10.github.io/Rraven/articles/Rraven.html","id":"run_raven","dir":"Articles","previous_headings":"Running Raven from R","what":"run_raven","title":"<center><font size=","text":"function opens multiple sound files simultaneously Raven. analysis finished (Raven window closed) data can automatically imported back R using ‘import’ argument. Note Raven, unlike R, can also handle files ‘mp3’, ‘flac’ ‘aif’ format .   See imp_raven details additional settings importing selections.","code":"# here replace with the path where Raven is install in your computer raven.path <- \"PATH_TO_RAVEN_DIRECTORY_HERE\"   # run function  run_raven(raven.path = raven.path, sound.files = c(\"Phae.long1.wav\", \"Phae.long2.wav\", \"Phae.long3.wav\", \"Phae.long4.wav\"),            import = TRUE, all.data = TRUE, path = tempdir())"},{"path":"https://marce10.github.io/Rraven/articles/Rraven.html","id":"raven_batch_detec","dir":"Articles","previous_headings":"Running Raven from R","what":"raven_batch_detec","title":"<center><font size=","text":"name suggests, raven_batch_detec runs Raven detector multiple sound files (sequentially). Batch detection Raven can also take files ‘mp3’, ‘flac’ ‘aif’ format (although analyzed R!). example runs detector one example sound files comes default Raven:   Please report bugs . Rraven package cited follows: Araya-Salas, M. (2017), Rraven: connecting R Raven bioacoustic software. R package version 1.0.0. Session information","code":"detec.res <- raven_batch_detec(raven.path = raven.path,                                 sound.files = \"BlackCappedVireo.aif\",                                path = file.path(raven.path, \"Examples\")) R version 4.4.2 (2024-10-31) Platform: x86_64-pc-linux-gnu Running under: Ubuntu 24.04.1 LTS  Matrix products: default BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0  locale:  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8     [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C     time zone: UTC tzcode source: system (glibc)  attached base packages: [1] stats     graphics  grDevices utils     datasets  methods   base       other attached packages: [1] kableExtra_1.4.0   Rraven_1.0.14      warbleR_1.1.33     NatureSounds_1.0.4 knitr_1.49         seewave_2.2.3      tuneR_1.4.7         loaded via a namespace (and not attached):  [1] sass_0.4.9        bitops_1.0-9      xml2_1.3.6        lattice_0.22-6    stringi_1.8.4     digest_0.6.37     magrittr_2.0.3    grid_4.4.2         [9] evaluate_1.0.1    fastmap_1.2.0     Matrix_1.7-1      jsonlite_1.8.9    brio_1.1.5        mgcv_1.9-1        httr_1.4.7        viridisLite_0.4.2 [17] scales_1.3.0      permute_0.9-7     pbapply_1.7-2     textshaping_0.4.1 jquerylib_0.1.4   cli_3.6.3         rlang_1.1.4       fftw_1.0-9        [25] splines_4.4.2     munsell_0.5.1     cachem_1.1.0      yaml_2.3.10       vegan_2.6-8       tools_4.4.2       parallel_4.4.2    colorspace_2.1-1  [33] curl_6.1.0        vctrs_0.6.5       R6_2.5.1          proxy_0.4-27      lifecycle_1.0.4   dtw_1.23-1        stringr_1.5.1     fs_1.6.5          [41] MASS_7.3-61       cluster_2.1.6     ragg_1.3.3        desc_1.4.3        pkgdown_2.1.1     bslib_0.8.0       glue_1.8.0        Rcpp_1.0.13-1     [49] systemfonts_1.1.0 xfun_0.50         rstudioapi_0.17.1 rjson_0.2.23      nlme_3.1-166      htmltools_0.5.8.1 rmarkdown_2.29    svglite_2.1.3     [57] testthat_3.2.2    signal_1.8-1      compiler_4.4.2    RCurl_1.98-1.16"},{"path":"https://marce10.github.io/Rraven/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marcelo Araya-Salas. Author, maintainer.","code":""},{"path":"https://marce10.github.io/Rraven/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Araya-Salas. (2020), Rraven: connecting R Raven bioacoustic software. R package version 1.0.9.","code":"@Manual{,   entry = {MISC},   title = {Rraven: connecting R and Raven bioacoustic software. R package version 1.0.9.},   author = {M. Araya-Salas},   year = {2020}, }"},{"path":"https://marce10.github.io/Rraven/index.html","id":"rraven-connecting-r-and-raven-sound-analysis-software","dir":"","previous_headings":"","what":"Connecting R and Raven Sound Analysis Software","title":"Connecting R and Raven Sound Analysis Software","text":"Rraven package designed facilitate exchange data R Raven sound analysis software (Cornell Lab Ornithology). Raven provides powerful tools analysis (animal) sounds. R can simplify automatization complex routines analyses. Furthermore, R packages warbleR, seewave monitoR (among others) provide additional methods analysis, working perfect complement found Raven. Hence, bridging applications can largely expand bioacoustician’s toolkit. Currently, analyses Raven run background command terminal. Thus, Rraven functions design simplify exchange data two programs. Install/load package CRAN follows: install latest developmental version github need R package remotes: package vignette provides detailed examples function Rraven, including R code well additional steps Raven required fully accomplished analyses. can pull follows: animations explaining additional steps Raven shown detail github version vignette, can downloaded follows (saves file “Rraven.github.html” current working directory): downloaded file can opened internet browser. Please cite Rraven follows: Araya-Salas. (2020), Rraven: connecting R Raven bioacoustic software. R package version 1.0.9.","code":"# From CRAN  install.packages(\"Rraven\")  #load package library(Rraven) # From github remotes::install_github(\"maRce10/Rraven\")  #load package library(Rraven) vignette(\"Rraven\") download.file(url = \"https://raw.githubusercontent.com/maRce10/Rraven/master/gifs/Rraven.hitgub.html\",  destfile = \"Rraven.hitgub.html\")"},{"path":"https://marce10.github.io/Rraven/reference/exp_empty_sels.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a 'Raven' selection for all sound files in a folder — exp_empty_sels","title":"Export a 'Raven' selection for all sound files in a folder — exp_empty_sels","text":"exp_empty_sels exports 'Raven' selection data .txt format includes empty selections sound files folder.","code":""},{"path":"https://marce10.github.io/Rraven/reference/exp_empty_sels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a 'Raven' selection for all sound files in a folder — exp_empty_sels","text":"","code":"exp_empty_sels(path = NULL, file.name = NULL, sound.files = NULL, pb = TRUE)"},{"path":"https://marce10.github.io/Rraven/reference/exp_empty_sels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a 'Raven' selection for all sound files in a folder — exp_empty_sels","text":"path character string indicating path directory look sound files. provided (default) function use current working directory. file.name Name output .txt file. NULL folder name used instead. sound.files character vector indicating sound files included. NULL (default) sound files working directory ('path') included. pb Logical argument control progress bar. Default TRUE.","code":""},{"path":"https://marce10.github.io/Rraven/reference/exp_empty_sels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a 'Raven' selection for all sound files in a folder — exp_empty_sels","text":"function saves selection table '.txt' format can directly opened Raven. objects returned R environment.","code":""},{"path":"https://marce10.github.io/Rraven/reference/exp_empty_sels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export a 'Raven' selection for all sound files in a folder — exp_empty_sels","text":"function saves selection file '.txt' format (can directly opened Raven) display sound files provided directory (argument 'path'). Useful simplify making selections several sound files need displayed simultaneously (e.g. several recordings individual). selection file saved provided directory ('path').","code":""},{"path":[]},{"path":"https://marce10.github.io/Rraven/reference/exp_empty_sels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Export a 'Raven' selection for all sound files in a folder — exp_empty_sels","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/Rraven/reference/exp_empty_sels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export a 'Raven' selection for all sound files in a folder — exp_empty_sels","text":"","code":"# Load data library(NatureSounds) #> Loading required package: knitr library(warbleR) #> Loading required package: tuneR #> Loading required package: seewave data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\"))  ## Export a single selection table including multiple files #save sound files  tuneR::writeWave(Phae.long1, file.path(tempdir(),  \"Phae.long1.wav\"), extensible = FALSE)  tuneR::writeWave(Phae.long2, file.path(tempdir(),  \"Phae.long2.wav\"), extensible = FALSE) tuneR::writeWave(Phae.long3, file.path(tempdir(),  \"Phae.long3.wav\"), extensible = FALSE) tuneR::writeWave(Phae.long4, file.path(tempdir(),  \"Phae.long4.wav\"), extensible = FALSE)  # export with no file name exp_empty_sels(path = tempdir()) #> all selections are OK  #>  #> exporting annotations (step 0 of 0):  # export with file name exp_empty_sels(file.name = \"Phaethornis.longirostris\", path = tempdir()) #> all selections are OK  #>"},{"path":"https://marce10.github.io/Rraven/reference/exp_est.html","id":null,"dir":"Reference","previous_headings":"","what":"Export wave objects of extended selection tables as sound files — exp_est","title":"Export wave objects of extended selection tables as sound files — exp_est","text":"exp_est exports wave objects extended selection table sound files","code":""},{"path":"https://marce10.github.io/Rraven/reference/exp_est.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export wave objects of extended selection tables as sound files — exp_est","text":"","code":"exp_est(X, file.name = NULL, path = NULL, single.file = FALSE,  selection.table = TRUE, pb = TRUE, normalize = TRUE, parallel = 1, wave.object = FALSE)"},{"path":"https://marce10.github.io/Rraven/reference/exp_est.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export wave objects of extended selection tables as sound files — exp_est","text":"X object class 'extended_selection_table' (objects produced selection_table). details objects can found link. file.name character string indicating name sound file (single.file = TRUE) /selection table (selection.table = TRUE). Default NULL. path character string indicating path directory sound files /selection table saved. provided function uses current working directory. Default NULL. single.file Logical argument control wave objects pooled together single sound file (TRUE) one individual sound file (FALSE, default). exporting single sound file files concatenated sequences extended selection table. Note create single sound file WAVE OBJECTS 'X\" MUST SAMPLE RATE (check attributes(X)$check.res$sample.rate) ideally bit depth (although strictly required). case, sample rate can homogenize using resample_est warbleR package. selection.table Logical argument determine Raven sound selection table ('.txt' file) also exported. Default TRUE. FALSE selection table return object R environment. exporting multiple sound files (single.file = FALSE) function still exports single selection table (case multiple sound selection table). pb Logical argument control progress bar exporting multiple sound files. Default TRUE. normalize Logical argument control wave objects individually normalized exporting (concatenated single.file = TRUE). Normalization rescales amplitude values 16 bit dynamic range. Default FALSE. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). wave.object Logical argument control single wave object returned R environment (TRUE) instead wave file working directory (selection table selection.table = TRUE). Default FALSE.","code":""},{"path":"https://marce10.github.io/Rraven/reference/exp_est.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export wave objects of extended selection tables as sound files — exp_est","text":"Sound file(s) saved provided path current working directory. selection.table = TRUE Raven sound selection table data 'X' also saved.","code":""},{"path":"https://marce10.github.io/Rraven/reference/exp_est.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export wave objects of extended selection tables as sound files — exp_est","text":"Extended selection tables annotations include acoustic annotation data. specific object class, extended_selection_table (package warbleR), includes list 'wave' objects corresponding annotations data (see full description ). function exp_est takes wave objects contained attributes extended selection tables saves sound files '.wav' format. single sound file containing annotations several sound files (one wave object) can produced (see 'single.file' argument). addition, Raven sound selection table can saved along sound files. exported selection table can open Raven exploring/manipulating selections 'X'. Note background noise margin () found wave object /annotated sound also exported. Note extended selection tables created 'song' (described ; see argument '.song' warbleR function selection_table) using argument single.file = FALSE function export single sound file every 'song' selection table. words exported sound files contain annotations given song, instead single annotation per sound file.","code":""},{"path":[]},{"path":"https://marce10.github.io/Rraven/reference/exp_est.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Export wave objects of extended selection tables as sound files — exp_est","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/Rraven/reference/exp_est.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export wave objects of extended selection tables as sound files — exp_est","text":"","code":"if (FALSE) { # \\dontrun{ # load example data data(list = \"lbh.est\", package = \"NatureSounds\")  # subset to 10 selections X <- lbh.est[1:10, ]  # Export data to a single sound file exp_est(X, file.name = \"test\", single.file = TRUE, path = tempdir())  # Export data to a single sound file and normalizing, no pb exp_est(X, file.name = \"test2\", single.file = TRUE, normalize = TRUE, pb = FALSE, path = tempdir())  # several files exp_est(X, single.file = FALSE, file.name = \"test3\", path = tempdir()) } # }"},{"path":"https://marce10.github.io/Rraven/reference/exp_raven.html","id":null,"dir":"Reference","previous_headings":"","what":"Export 'Raven' selections — exp_raven","title":"Export 'Raven' selections — exp_raven","text":"exp_raven exports selection tables 'Raven' selection data .txt format.","code":""},{"path":"https://marce10.github.io/Rraven/reference/exp_raven.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export 'Raven' selections — exp_raven","text":"","code":"exp_raven(X, path = NULL, file.name = NULL, khz.to.hz = TRUE,  sound.file.path = NULL, single.file = TRUE, parallel = 1, pb = TRUE)"},{"path":"https://marce10.github.io/Rraven/reference/exp_raven.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export 'Raven' selections — exp_raven","text":"X Object class data frame selection_table containing columns sound file (sound.files), selection (selec), start end time signals ('start' 'end') low high frequency ('bottom.freq' 'top.freq', optional). See example data 'selec_table' warbleR) package. path character string indicating path directory save selection files. provided (default) function saves file current working directory. file.name Name output .txt file. NULL sound file names used instead. multiple selection files generated (see 'single.file') sound files names added provided 'file.name'. Ignored single.file = FALSE. khz..hz Logical. Controls frequency variables converted kHz (unit used bioacoustic analysis R packages like warbleR) Hz (unit used Raven). Default TRUE. sound.file.path character string indicating path directory containing sound file(s). Providing information allows open sound file selection table simultaneously. can  done using 'File > Open selection table' option 'Raven' (drag/drop selection file Raven). Default NULL. argument required exporting selections multiple sound files. single.file Logical. Controls whether single selection file (TRUE; default) selection file sound file (FALSE, hence, applicable several sound files included 'X') generated. Note 'sound.file.path' must provided exporting several sound files single selection file duration sound files required. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). pb Logical argument control progress bar. Default TRUE.","code":""},{"path":"https://marce10.github.io/Rraven/reference/exp_raven.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export 'Raven' selections — exp_raven","text":"function saves selection table '.txt' format can directly opened Raven. several sound files available users can either export single selection file multiple selection files (one sound file). objects returned R environment.","code":""},{"path":"https://marce10.github.io/Rraven/reference/exp_raven.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export 'Raven' selections — exp_raven","text":"function exports selection tables (ones used R package warbleR) 'Raven' selection file format ('.txt').  can useful obtain additional Raven measurements existing selections adding new measurements selection table Raven. Note selection labels must numeric non-duplicated exporting Raven. case function relabeled selections previous selection labels retained new column ('old.selec').","code":""},{"path":[]},{"path":"https://marce10.github.io/Rraven/reference/exp_raven.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Export 'Raven' selections — exp_raven","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/Rraven/reference/exp_raven.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export 'Raven' selections — exp_raven","text":"","code":"# Load data library(warbleR) data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\"))  # Select data for a single sound file st1 <- lbh_selec_table[lbh_selec_table$sound.files == \"Phae.long1.wav\", ]  # Export data of a single sound file exp_raven(st1, file.name = \"Phaethornis 1\", path = tempdir())  # Export a single selection table including multiple files tuneR::writeWave(Phae.long1, file.path(tempdir(),  \"Phae.long1.wav\"), extensible = FALSE) #save sound files  tuneR::writeWave(Phae.long2, file.path(tempdir(),  \"Phae.long2.wav\"), extensible = FALSE) tuneR::writeWave(Phae.long3, file.path(tempdir(),  \"Phae.long3.wav\"), extensible = FALSE) tuneR::writeWave(Phae.long4, file.path(tempdir(),  \"Phae.long4.wav\"), extensible = FALSE)  # export raven selection as single file exp_raven(X = lbh_selec_table, file.name = \"Phaethornis multiple sound files\", single.file = TRUE, sound.file.path = tempdir(), path = tempdir())"},{"path":"https://marce10.github.io/Rraven/reference/extract_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract time series parameters from data imported from 'Raven' — extract_ts","title":"Extract time series parameters from data imported from 'Raven' — extract_ts","text":"extract_ts extracts time series parameters data imported 'Raven' bioacoustic software.","code":""},{"path":"https://marce10.github.io/Rraven/reference/extract_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract time series parameters from data imported from 'Raven' — extract_ts","text":"","code":"extract_ts(X, ts.column, equal.length = FALSE, as.time.series = FALSE,  length.out = 30, parallel = 1, pb = TRUE)"},{"path":"https://marce10.github.io/Rraven/reference/extract_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract time series parameters from data imported from 'Raven' — extract_ts","text":"X Data frame imported Raven. include least columns : sound file names, selection labels, parameters encoded time series (e.g. several numbers separated semicolon) ts.column Name column time series data extracted. Default NULL. equal.length Logical. Controls whether time series kept original data (time unequal lengths) numbers interpolated equalize series length (using approx function). series interpolated match length longest series data. Default FALSE. .time.series Logical. Controls data converted time series format (using .ts function). Default FALSE. length.numeric vector length 1 giving number measurements interpolated (length time series). default 30. Ignored equal.length FALSE. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). pb Logical argument control progress bar. Default TRUE.","code":""},{"path":"https://marce10.github.io/Rraven/reference/extract_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract time series parameters from data imported from 'Raven' — extract_ts","text":"data frame columns sound file name (sound.files), selection label (selec) time series selection.","code":""},{"path":"https://marce10.github.io/Rraven/reference/extract_ts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract time series parameters from data imported from 'Raven' — extract_ts","text":"function extracts parameters encoded time series 'Raven' selection files. resulting data frame can directly input functions time series analysis acoustic signals freq_DTW.","code":""},{"path":[]},{"path":"https://marce10.github.io/Rraven/reference/extract_ts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract time series parameters from data imported from 'Raven' — extract_ts","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/Rraven/reference/extract_ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract time series parameters from data imported from 'Raven' — extract_ts","text":"","code":"if (FALSE) { # \\dontrun{ # Load data data(selection_files)  #save 'Raven' selection tables in the temporary directory  writeLines(selection_files[[5]], con = file.path(tempdir(), names(selection_files)[5]))  # import data to R rvn.dat <- imp_raven(all.data = TRUE, path = tempdir())  # Peak freq dif length extract_ts(X = rvn.dat, ts.column = \"Peak Freq Contour (Hz)\")  # Peak freq equal length extract_ts(X = rvn.dat, ts.column = \"Peak Freq Contour (Hz)\", equal.length = T)   # Peak freq equal length 10 measurements extract_ts(X = rvn.dat, ts.column = \"Peak Freq Contour (Hz)\",  equal.length = TRUE, length.out = 10)  } # }"},{"path":"https://marce10.github.io/Rraven/reference/fix_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify sound file path in Raven's selection tables — fix_path","title":"Modify sound file path in Raven's selection tables — fix_path","text":"fix_path modifies path column selection tables sound selection tables","code":""},{"path":"https://marce10.github.io/Rraven/reference/fix_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify sound file path in Raven's selection tables — fix_path","text":"","code":"fix_path(path = NULL, dest.path = NULL, recursive = FALSE, parallel = 1, pb = TRUE,  new.begin.path, sound.file.col, files = NULL)"},{"path":"https://marce10.github.io/Rraven/reference/fix_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify sound file path in Raven's selection tables — fix_path","text":"path character string indicating path directory look 'Raven' selection (text) files. provided (default) function searches current working directory. dest.path character string indicating path directory sound selection tables saved. supplied selection files overwritten new begin path. provided (default) files save current directory. recursive Logical. TRUE listing recurses sub-directories. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). pb Logical argument control progress bar. Default TRUE. new.begin.path character string indicating path directory sound files located. argument required. sound.file.col character string name column containing sound file names selection text files. Required. files Character vector indicating name selection files (.txt format) imported. Optional. Default NULL.","code":""},{"path":"https://marce10.github.io/Rraven/reference/fix_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify sound file path in Raven's selection tables — fix_path","text":"Selection table file(s) saved 'dest.path' working directory (default, overwrites existing files).","code":""},{"path":"https://marce10.github.io/Rraven/reference/fix_path.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modify sound file path in Raven's selection tables — fix_path","text":"function modifies path field Raven's selection tables sound selection tables. useful sound files moved different location (computer). Note ability open selections sound files simultaneously works long \"begin.path\" column referring directory containing sound files.","code":""},{"path":[]},{"path":"https://marce10.github.io/Rraven/reference/fix_path.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Modify sound file path in Raven's selection tables — fix_path","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/Rraven/reference/fix_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify sound file path in Raven's selection tables — fix_path","text":"","code":"{ # load warbleR for sound file examples library(NatureSounds)  #load data data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"selection_files\"))  # save sound files tuneR::writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\"), extensible = FALSE) tuneR::writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\"), extensible = FALSE) tuneR::writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\"), extensible = FALSE) tuneR::writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"), extensible = FALSE) # save 'Raven' selection tables in the temporary directory out <- lapply(1:2, function(x) writeLines(selection_files[[x]], con = file.path(tempdir(), names(selection_files)[x])))  # try drag and drop selection files into Raven (shouldn't work)  # now fix files fix_path(path = tempdir(), sound.file.col = \"Begin File\", new.begin.path = \"YOUR NEW LOCATION HERE\")  # try drag and drop into Raven again (should work now) }"},{"path":"https://marce10.github.io/Rraven/reference/imp_corr_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Import 'Raven' batch correlator output — imp_corr_mat","title":"Import 'Raven' batch correlator output — imp_corr_mat","text":"imp_corr_mat imports output 'Raven' batch correlator.","code":""},{"path":"https://marce10.github.io/Rraven/reference/imp_corr_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import 'Raven' batch correlator output — imp_corr_mat","text":"","code":"imp_corr_mat(file, path = NULL)"},{"path":"https://marce10.github.io/Rraven/reference/imp_corr_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import 'Raven' batch correlator output — imp_corr_mat","text":"file character string name output '.txt' file generated Raven. path character string indicating path directory look text files. provided (default) function searches current working directory.","code":""},{"path":"https://marce10.github.io/Rraven/reference/imp_corr_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import 'Raven' batch correlator output — imp_corr_mat","text":"list 2 matrices. first one contains correlation coefficients second one time lags peak correlations.","code":""},{"path":"https://marce10.github.io/Rraven/reference/imp_corr_mat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import 'Raven' batch correlator output — imp_corr_mat","text":"function imports output batch correlation routine Raven. correlation lag matrices contained output ' .txt' file read waveform spectrogram (cross-correlation) correlations can imported.","code":""},{"path":[]},{"path":"https://marce10.github.io/Rraven/reference/imp_corr_mat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import 'Raven' batch correlator output — imp_corr_mat","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/Rraven/reference/imp_corr_mat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import 'Raven' batch correlator output — imp_corr_mat","text":"","code":"if (FALSE) { # \\dontrun{  # Load data library(NatureSounds) data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\"))  tuneR::writeWave(Phae.long1, file.path(tempdir(),  \"Phae.long1.wav\"), extensible = FALSE) #save sound files  tuneR::writeWave(Phae.long2, file.path(tempdir(),  \"Phae.long2.wav\"), extensible = FALSE) tuneR::writeWave(Phae.long3, file.path(tempdir(),  \"Phae.long3.wav\"), extensible = FALSE) tuneR::writeWave(Phae.long4, file.path(tempdir(),  \"Phae.long4.wav\"), extensible = FALSE)  #create new folder to put cuts dir.create(file.path(tempdir(), \"cuts\"))  # cut files cut_sels(X = lbh_selec_table, mar = 0.05, path = tempdir(),  dest.path = file.path(tempdir(), \"cuts\"))  #Now run 'Raven' batch correlator un the cuts and save the output in the same folder  # Import output (change the name of the file if you used a different one) xcorr.rav <- imp_corr_mat(file = \"BatchCorrOutput.txt\",  path = file.path(tempdir(), \"cuts\"))  # check results    ## correlation matrix xcorr.rav[[1]]  ## time lag matrix xcorr.rav[[2]] } # }"},{"path":"https://marce10.github.io/Rraven/reference/imp_raven.html","id":null,"dir":"Reference","previous_headings":"","what":"Import 'Raven' selections — imp_raven","title":"Import 'Raven' selections — imp_raven","text":"imp_raven imports several 'Raven' selection files simultaneously. Files must '.txt' format.","code":""},{"path":"https://marce10.github.io/Rraven/reference/imp_raven.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import 'Raven' selections — imp_raven","text":"","code":"imp_raven(path = NULL, warbler.format = FALSE,  all.data = FALSE, files = NULL, only.spectro.view = TRUE, recursive = FALSE, name.from.file = FALSE, ext.case = NULL, freq.cols = TRUE, waveform = FALSE, parallel = 1, pb = TRUE, unread = FALSE, rm.dup = FALSE,  sound.file.col = NULL)"},{"path":"https://marce10.github.io/Rraven/reference/imp_raven.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import 'Raven' selections — imp_raven","text":"path character string indicating path directory look 'Raven' selection (text) files. provided (default) function searches current working directory. warbler.format Logical. TRUE columns renamed using standard names selection table package 'warbleR', frequency limit columns (high low frequency) 'Hz' converted 'kHz' (warbleR selection tables) spectrogram view measurements kept. Default FALSE. .data Logical. TRUE columns selection files returned, keeping name columns 'Raven' files. Default FALSE. Columns absent selection files filled NA's. argument DEPRECATED replaced 'warbler.format'. files Character vector indicating name selection files (.txt format) imported. Optional. Default NULL. .spectro.view Logical. TRUE (default) measurements Raven spectrogram view ('View' column) returned. Ignored warbler.format == TRUE (spectrogram view measurements kept). recursive Logical. TRUE listing recurses sub-directories. name..file Logical. TRUE sound file names extracted selection text file name. assumes selections files contained suffix \"Table.1.selections.txt\", \"selections.txt\" \".txt\" (order). Note default assume extension file name \".wav\". can control using argument 'ext.case'. Default FALSE). Ignored sound.file.col' provided /.data TRUE). Note time information selection tables multiple sound files corrected name..file = TRUE. ext.case Character string length 1 specify whether sound file extensions upper lower case. match extension .wav files selection made. must either 'upper' 'lower'. needed 'name..file' TRUE. freq.cols Logical. TRUE 'Low Freq' 'High Freq' columns also imported. Ignored .data TRUE. waveform Logical control waveform view data included (data typically duplicated spectrogram view data).  Default FALSE (include ). argument DEPRECATED replaced '.spectro.view'. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). pb Logical argument control progress bar. Default TRUE. unread DEPRECATED. Logical. TRUE list (instead data frame). first element list contains selections. argument deprecated. Name unread files now kept .Options$Rraven. whole data. second third elements character vectors names sound files read contain multiple sound files 'File Offset' column imported. Default FALSE. rm.dup Logical. TRUE duplicated rows columns removed. Useful selection files duplicated. Default FALSE. sound.file.col character string name column containing sound files selection text files. Default NULL. Ignored 'name..file' TRUE /.data TRUE. argument DEPRECATED function now searches columns containing sound file names.","code":""},{"path":"https://marce10.github.io/Rraven/reference/imp_raven.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import 'Raven' selections — imp_raven","text":"single data frame information selection files. selection files read listed  .Options$Rraven.  'warbler.format' argument set TRUE data frame contains following columns: sound.files, selec, channel,start, end, top.freq, bottom.freq selec.file. .data set TRUE columns 'Raven' selection files returned.  individual selection files contain information multiple sound files function import file correct time  parameters (start end) 1) 'File Offset (s)' found selection table.","code":""},{"path":"https://marce10.github.io/Rraven/reference/imp_raven.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import 'Raven' selections — imp_raven","text":"function import 'Raven' selection data many files simultaneously. selection files working directory 'path' supplied imported (unless 'files' argument also supplied). created using Raven Pro 1.5 tested Raven 1.6. Selection tables created versions might read properly. Files must '.txt' format. Selection files including data multiple recordings can also imported although must contained 'File Offset (s)' column. Selections span across multiple sound files recommended assigned first sound file, produce errors downstream analyses 'warbleR' package. Empty '.txt' files ignored.","code":""},{"path":[]},{"path":"https://marce10.github.io/Rraven/reference/imp_raven.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import 'Raven' selections — imp_raven","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/Rraven/reference/imp_raven.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import 'Raven' selections — imp_raven","text":"","code":"# load data data(selection_files)  # save 'Raven' selection tables in the temporary directory out <- lapply(1:2, function(x) writeLines(selection_files[[x]], con = file.path(tempdir(), names(selection_files)[x])))  # \\donttest{ # providing the name of the column with the sound file names rvn.dat <- imp_raven(sound.file.col = \"Begin.File\", all.data = FALSE, path = tempdir())  # View(rvn.dat) # }"},{"path":"https://marce10.github.io/Rraven/reference/imp_syrinx.html","id":null,"dir":"Reference","previous_headings":"","what":"Import 'Syrinx' selections — imp_syrinx","title":"Import 'Syrinx' selections — imp_syrinx","text":"imp_syrinx imports 'Syrinx' selection data many files simultaneously. files must columns.","code":""},{"path":"https://marce10.github.io/Rraven/reference/imp_syrinx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import 'Syrinx' selections — imp_syrinx","text":"","code":"imp_syrinx(path = NULL, all.data = FALSE, recursive = FALSE,  exclude = FALSE, hz.to.khz = TRUE, parallel = 1, pb = TRUE)"},{"path":"https://marce10.github.io/Rraven/reference/imp_syrinx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import 'Syrinx' selections — imp_syrinx","text":"path character string indicating path directory look text files. provided (default) function searches current working directory. Default NULL. .data Logical. TRUE columns text files returned. Default FALSE. Note files contain exactly columns order. recursive Logical. TRUE listing recurses sub-directories. exclude Logical. Controls whether files read ignored (TRUE). Default FALSE. hz..khz Logical. Controls frequency variables converted  Hz (unit used Syrinx) kHz (unit used warbleR bioacoustic analysis packages R). Default TRUE. Ignored .data TRUE. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). pb Logical argument control progress bar. Default TRUE.","code":""},{"path":"https://marce10.github.io/Rraven/reference/imp_syrinx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import 'Syrinx' selections — imp_syrinx","text":"single data frame information selection files. .data argument set FALSE data frame contains following columns: selec, start, end, selec.file. sound.file.col provided data frame also contain 'sound.files' column. .data set TRUE columns selection files returned.","code":""},{"path":[]},{"path":"https://marce10.github.io/Rraven/reference/imp_syrinx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import 'Syrinx' selections — imp_syrinx","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/Rraven/reference/imp_syrinx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import 'Syrinx' selections — imp_syrinx","text":"","code":"if (FALSE) { # \\dontrun{ #load data  data(selection_files)  #save 'Raven' selection tables in the temporary directory  writeLines(selection_files[[7]], con = file.path(tempdir(), names(selection_files)[7]))  syr.dat <- imp_syrinx(all.data = FALSE)  # View(syr.dat)  #getting all the data syr.dat <- imp_syrinx(all.data = TRUE)  # View(syr.dat) } # }"},{"path":"https://marce10.github.io/Rraven/reference/match_wav_case.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix the extension case of sound files — match_wav_case","title":"Fix the extension case of sound files — match_wav_case","text":"match_wav_case fixes extension case sound files selection table.","code":""},{"path":"https://marce10.github.io/Rraven/reference/match_wav_case.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix the extension case of sound files — match_wav_case","text":"","code":"match_wav_case(X, path = NULL, output = \"data.frame\", verbose = TRUE)"},{"path":"https://marce10.github.io/Rraven/reference/match_wav_case.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix the extension case of sound files — match_wav_case","text":"X Data frame containing columns sound file (sound.files) selection (selec). See example data 'lbh_selec_table' warbleR) package. path character string indicating path directory look sound files. provided (default) function searches current working directory. output Character string. Controls whether complete data frame ('data.frame') sound file names (\"names\") returned. Default 'data.frame'. verbose Logical control messages printed (TRUE, default).","code":""},{"path":"https://marce10.github.io/Rraven/reference/match_wav_case.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix the extension case of sound files — match_wav_case","text":"data input data frame case extension file names 'sound.files' column matching sound files .","code":""},{"path":"https://marce10.github.io/Rraven/reference/match_wav_case.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fix the extension case of sound files — match_wav_case","text":"function returns data input data frame extension file names 'sound.files' column matching sound files (case mismatch). function needs path sound files compare extension names.","code":""},{"path":[]},{"path":"https://marce10.github.io/Rraven/reference/match_wav_case.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fix the extension case of sound files — match_wav_case","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/Rraven/reference/match_wav_case.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix the extension case of sound files — match_wav_case","text":"","code":"{ library(warbleR) data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\",  \"lbh_selec_table\"))  tuneR::writeWave(Phae.long1, file.path(tempdir(),  \"Phae.long1.wav\"), extensible = FALSE) #save sound files  tuneR::writeWave(Phae.long2, file.path(tempdir(),  \"Phae.long2.wav\"), extensible = FALSE) tuneR::writeWave(Phae.long3, file.path(tempdir(),  \"Phae.long3.wav\"), extensible = FALSE) tuneR::writeWave(Phae.long4, file.path(tempdir(),  \"Phae.long4.wav\"), extensible = FALSE)  # change one extension lbh_selec_table$sound.files <- as.character(lbh_selec_table$sound.files) lbh_selec_table$sound.files[1] <- gsub(\".wav$\", \".WAV\", lbh_selec_table$sound.files[1])     # fixed extension an return data frame  match_wav_case(X = lbh_selec_table, path = tempdir())     # fixed extension an return sound file names  match_wav_case(X = lbh_selec_table, output = \"names\", path = tempdir())  }    #>  [1] \"Phae.long1.wav\" \"Phae.long1.wav\" \"Phae.long1.wav\" \"Phae.long2.wav\" #>  [5] \"Phae.long2.wav\" \"Phae.long3.wav\" \"Phae.long3.wav\" \"Phae.long3.wav\" #>  [9] \"Phae.long4.wav\" \"Phae.long4.wav\" \"Phae.long4.wav\""},{"path":"https://marce10.github.io/Rraven/reference/raven_batch_detec.html","id":null,"dir":"Reference","previous_headings":"","what":"Run 'Raven' batch detector — raven_batch_detec","title":"Run 'Raven' batch detector — raven_batch_detec","text":"raven_batch_detec Runs 'Raven' batch detector multiple sound files sequentially","code":""},{"path":"https://marce10.github.io/Rraven/reference/raven_batch_detec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run 'Raven' batch detector — raven_batch_detec","text":"","code":"raven_batch_detec(raven.path = NULL, sound.files, path = NULL,  detector.type, detector.preset = \"Default\", view.preset = \"Default\", relabel_colms = TRUE, pb = TRUE, parallel = 1)"},{"path":"https://marce10.github.io/Rraven/reference/raven_batch_detec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run 'Raven' batch detector — raven_batch_detec","text":"raven.path character string indicating path directory look 'Raven' executable file ('Raven' installed). sound.files character vector indicating files analyzed. OSX (mac) one file time can run (use loops instead!). NULL (default) 'Raven' run without opening file. path character string indicating path directory look sound files. provided (default) function searches current working directory. Default NULL. detector.type Character string specifying type detector called. 3 options available 'Raven': 'Amplitude Detector', 'Band Limited Energy Detector' 'Band Limited Entropy Detector'. Must provided. detector.preset Character string specifying name customized detector called. NULL (default) 'Default' detector specific detector type used (see 'detector.type' argument). Custom detectors must found one default 'Raven' detector directories (usually within \"'raven.path'/Presets/Detector\"). view.preset Character string specifying name window preset used. require 'Amplitude Detector' (see 'detector.type' argument). NULL (default) 'Default' window preset used. relabel_colms Logical.  TRUE (default) columns labeled match selection table format acoustic analysis package warbleR pb Logical argument control progress bar. Default TRUE. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing).","code":""},{"path":"https://marce10.github.io/Rraven/reference/raven_batch_detec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run 'Raven' batch detector — raven_batch_detec","text":"data frame selections produced detection. See imp_raven details selections imported.","code":""},{"path":"https://marce10.github.io/Rraven/reference/raven_batch_detec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run 'Raven' batch detector — raven_batch_detec","text":"function runs 'Raven' sound analysis software (Cornell Lab Ornithology), detector  multiple sound files sequentially. 'Raven' Pro must installed. Note batch detection 'Raven' can also take sound files 'mp3', 'flac' 'aif' format.","code":""},{"path":[]},{"path":"https://marce10.github.io/Rraven/reference/raven_batch_detec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run 'Raven' batch detector — raven_batch_detec","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/Rraven/reference/raven_batch_detec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run 'Raven' batch detector — raven_batch_detec","text":"","code":"if (FALSE) { # \\dontrun{  # here replace with path where 'Raven' is installed in your computer raven.path <- \"PATH_TO_RAVEN_DIRECTORY_HERE\"   # Run detector on raven example sound files  # single sound file using 'Amplitude Detector'  detec.res <- raven_batch_detec(raven.path = raven.path,  sound.files = \"BlackCappedVireo.aif\", path = file.path(raven.path, \"Examples\"),  detector.type = \"Amplitude Detector\")  # on raven examples  2 files detec.res <- raven_batch_detec(raven.path = raven.path,  sound.files = c(\"BlackCappedVireo.aif\", \"CanyonWren.wav\"),  path = file.path(raven.path, \"Examples\"), detector.type = \"Amplitude Detector\")  # using 'Band Limited Energy Detector'  detec.res <- raven_batch_detec(raven.path = raven.path,  sound.files = c(\"BlackCappedVireo.aif\", \"CanyonWren.wav\"),  path = file.path(raven.path, \"Examples\"), detector = \"Band Limited Energy Detector\") } # }"},{"path":"https://marce10.github.io/Rraven/reference/relabel_colms.html","id":null,"dir":"Reference","previous_headings":"","what":"Relabel columns to match the selection table format — relabel_colms","title":"Relabel columns to match the selection table format — relabel_colms","text":"relabel_colms relabels columns match selection table format (R package warbleR)","code":""},{"path":"https://marce10.github.io/Rraven/reference/relabel_colms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relabel columns to match the selection table format — relabel_colms","text":"","code":"relabel_colms(X, extra.cols.name = NULL, extra.cols.new.name = NULL,  khz.to.hz = FALSE, hz.to.khz = FALSE, waveform = FALSE)"},{"path":"https://marce10.github.io/Rraven/reference/relabel_colms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relabel columns to match the selection table format — relabel_colms","text":"X Data frame imported Raven. extra.cols.name Character vector names additional columns relabeled. Default NULL. 'extra.cols.new.name' must also provided. extra.cols.new.name Character vector new names additional columns relabeled. Default NULL. 'extra.cols.name' must also provided. khz..hz Logical. Controls frequency variables ('top.freq' 'bottom.freq') converted kHz (unit used bioacoustic analysis R packages like warbleR) Hz (unit used Raven). Default FALSE. hz..khz Logical. Controls frequency variables ('top.freq' 'bottom.freq') converted Hz (unit used bioacoustic analysis R packages like Raven) kHz (unit used warbleR). Default FALSE. Ignored 'kHz..hz' TRUE. waveform Logical control 'waveform' related data included (data typically duplicated 'spectrogram' data).  Default FALSE (include ).","code":""},{"path":"https://marce10.github.io/Rraven/reference/relabel_colms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relabel columns to match the selection table format — relabel_colms","text":"function returns input data frame new column names time frequency 'coordinates' sound files selections.","code":""},{"path":"https://marce10.github.io/Rraven/reference/relabel_colms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Relabel columns to match the selection table format — relabel_colms","text":"function relabels columns match selection table format match ones used bioacoustic analysis R packages like warbleR.","code":""},{"path":[]},{"path":"https://marce10.github.io/Rraven/reference/relabel_colms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Relabel columns to match the selection table format — relabel_colms","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/Rraven/reference/relabel_colms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relabel columns to match the selection table format — relabel_colms","text":"","code":"# Load data data(selection_files)  #save 'Raven' selection tables in the temporary directory  writeLines(selection_files[[5]], con = file.path(tempdir(), names(selection_files)[5]))  # \\donttest{  #'# import data to R rvn.dat <- imp_raven(all.data = TRUE, path = tempdir())   names(rvn.dat) #>  [1] \"Selection\"              \"View\"                   \"Channel\"                #>  [4] \"Begin Time (s)\"         \"End Time (s)\"           \"Low Freq (Hz)\"          #>  [7] \"High Freq (Hz)\"         \"Begin File\"             \"channel\"                #> [10] \"Begin Path\"             \"File Offset (s)\"        \"Peak Freq Contour (Hz)\" #> [13] \"old.selec\"              \"Rraven.labels\"          \"selec.file\"              # Select data for a single sound file rvn.dat2 <-  relabel_colms(rvn.dat)  names(rvn.dat2) #>  [1] \"selec\"                  \"View\"                   \"Channel\"                #>  [4] \"start\"                  \"end\"                    \"bottom.freq\"            #>  [7] \"top.freq\"               \"Begin File\"             \"channel\"                #> [10] \"Begin Path\"             \"File Offset (s)\"        \"Peak Freq Contour (Hz)\" #> [13] \"old.selec\"              \"Rraven.labels\"          \"selec.file\"              # plus 1 additional column rvn.dat2 <-  relabel_colms(rvn.dat, extra.cols.name = \"selec.file\", \"Raven selection file\")  names(rvn.dat2) #>  [1] \"selec\"                  \"View\"                   \"Channel\"                #>  [4] \"start\"                  \"end\"                    \"bottom.freq\"            #>  [7] \"top.freq\"               \"Begin File\"             \"channel\"                #> [10] \"Begin Path\"             \"File Offset (s)\"        \"Peak Freq Contour (Hz)\" #> [13] \"old.selec\"              \"Rraven.labels\"          \"Raven selection file\"    # plus 2 additional column  rvn.dat2 <- relabel_colms(rvn.dat, extra.cols.name = c(\"selec.file\", \"View\"),  c(\"Raven selection file\", \"Raven view\"))   names(rvn.dat2) #>  [1] \"selec\"                  \"Raven view\"             \"Channel\"                #>  [4] \"start\"                  \"end\"                    \"bottom.freq\"            #>  [7] \"top.freq\"               \"Begin File\"             \"channel\"                #> [10] \"Begin Path\"             \"File Offset (s)\"        \"Peak Freq Contour (Hz)\" #> [13] \"old.selec\"              \"Rraven.labels\"          \"Raven selection file\"   # }"},{"path":"https://marce10.github.io/Rraven/reference/run_raven.html","id":null,"dir":"Reference","previous_headings":"","what":"Open sound files in 'Raven' sound analysis software — run_raven","title":"Open sound files in 'Raven' sound analysis software — run_raven","text":"run_raven opens several sound files 'Raven' sound analysis software","code":""},{"path":"https://marce10.github.io/Rraven/reference/run_raven.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open sound files in 'Raven' sound analysis software — run_raven","text":"","code":"run_raven(raven.path = NULL, sound.files = NULL, path = NULL, at.the.time = 10, import = FALSE, redo = FALSE, view.preset = NULL, pb = TRUE, ...)"},{"path":"https://marce10.github.io/Rraven/reference/run_raven.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open sound files in 'Raven' sound analysis software — run_raven","text":"raven.path character string indicating path directory look 'Raven' executable file ('Raven' installed). sound.files character vector indicating files analyzed.  NULL (default) 'Raven' run without opening file. path character string indicating path directory look sound files. provided (default) function searches current working directory. Default NULL. ..time Numeric vector length 1 controlling many files open 'Raven' time. Note opening many files make 'Raven' run memory. need close 'Raven' every time batch files analyzed, next batch opened. Default 10. available OSX (mac). import Logical. Controls selection tables generated returned data frame R environment. works selections saved \"Selections\" folder 'Raven' directory. argument calls imp_raven internally. Additional arguments can passed imp_raven control way data imported. redo Logical. Controls whether subset files 'Raven' selections (.txt file) 'Raven' 'selections' folder analyzed (FALSE). Useful resuming analysis. Default FALSE. view.preset Character string defining 'Raven' view preset used. match exactly name present 'Raven' folder 'Presets/Sound Window'. provided default view preset used. pb Logical argument control progress bar. Default TRUE. ... Additional arguments passed imp_raven customizing selections imported (ignored import = FALSE).","code":""},{"path":"https://marce10.github.io/Rraven/reference/run_raven.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open sound files in 'Raven' sound analysis software — run_raven","text":"import = TRUE data frame selections produced analysis return data frame. See imp_raven details selections imported.","code":""},{"path":"https://marce10.github.io/Rraven/reference/run_raven.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Open sound files in 'Raven' sound analysis software — run_raven","text":"function runs 'Raven' sound analysis software (Cornell Lab Ornithology), opening many files simultaneously. 'Raven' still run sound files provided (.e. sound.files = NULL). end analysis data can automatically imported back R using 'import' argument. 'Raven' Pro must installed. Note 'Raven' can also take sound files 'mp3', 'flac' 'aif' format.","code":""},{"path":[]},{"path":"https://marce10.github.io/Rraven/reference/run_raven.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Open sound files in 'Raven' sound analysis software — run_raven","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/Rraven/reference/run_raven.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open sound files in 'Raven' sound analysis software — run_raven","text":"","code":"if (FALSE) { # \\dontrun{ # save sound files library(NatureSounds)  data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\")) tuneR::writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\"), extensible = FALSE) tuneR::writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\"), extensible = FALSE)  # here replace with the path where 'Raven' is install in your computer raven.path <- \"PATH_TO_RAVEN_DIRECTORY_HERE\"   # run function  run_raven(raven.path = raven.path, sound.files = c(\"Phae.long1.wav\", \"Phae.long2.wav\"),  at.the.time = 2, import = T, name.from.file = T, ext.case = \"upper\",   all.data = TRUE, path = tempdir())     #getting all the data rav.dat <- run_raven(all.data = TRUE, raven.path = raven.path) # View(rav.dat) } # }"},{"path":"https://marce10.github.io/Rraven/reference/selection_files.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of 'Raven' selection tables. — selection_files","title":"A list of 'Raven' selection tables. — selection_files","text":"List 'Raven' 'Syrinx' selection tables containing Phaethornis longirostris (Long-billed Hermit) songs example sound files included warbleR package (items 1 5), 'Raven' correlation matrix (item 6) one selection cane-brake wrens (item 7; sound file available).","code":""},{"path":"https://marce10.github.io/Rraven/reference/selection_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of 'Raven' selection tables. — selection_files","text":"","code":"data(selection_files)"},{"path":"https://marce10.github.io/Rraven/reference/selection_files.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list of 'Raven' selection tables. — selection_files","text":"List 7 selection tables. first 5 items 'Raven' selection tables Long billed hermit songs. 5th table contains multiple sound file selection table. 6th item 'Raven' correlation matrix last one table 'Syrinx' format.","code":""},{"path":"https://marce10.github.io/Rraven/reference/selection_files.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A list of 'Raven' selection tables. — selection_files","text":"Marcelo Araya-Salas","code":""},{"path":"https://marce10.github.io/Rraven/reference/to_sound_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Raven's selection files into sound selection files — to_sound_selection","title":"Convert Raven's selection files into sound selection files — to_sound_selection","text":"to_sound_selection converts Raven's selection files sound selection files","code":""},{"path":"https://marce10.github.io/Rraven/reference/to_sound_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Raven's selection files into sound selection files — to_sound_selection","text":"","code":"to_sound_selection(path = NULL, dest.path = NULL, recursive = FALSE,  parallel = 1, pb = TRUE, sound.file.path, sound.file.col)"},{"path":"https://marce10.github.io/Rraven/reference/to_sound_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Raven's selection files into sound selection files — to_sound_selection","text":"path character string indicating path directory look 'Raven' selection (text) files. provided (default) function searches current working directory. dest.path character string indicating path directory sound selection tables saved. provided (default) files saved directory original raven selections found. recursive Logical. TRUE listing recurses sub-directories. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). pb Logical argument control progress bar. Default TRUE. sound.file.path character string indicating path directory containing sound file(s). argument required. sound.file.col character string name column containing sound file names selection text files. Required.","code":""},{"path":"https://marce10.github.io/Rraven/reference/to_sound_selection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Raven's selection files into sound selection files — to_sound_selection","text":"Sound selection table file(s) saved 'dest.path' working directory.","code":""},{"path":"https://marce10.github.io/Rraven/reference/to_sound_selection.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Raven's selection files into sound selection files — to_sound_selection","text":"function converts Raven's selection tables sound selection tables.  Sound selection table convenient format can open directly Raven (drag--drop)  automatically open associated sound file. Multiple files can  simultaneously converted. Files must '.txt' format. Selection files including data multiple recordings can converted correspondent sound files found directory. Note data imported R environment.","code":""},{"path":[]},{"path":"https://marce10.github.io/Rraven/reference/to_sound_selection.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert Raven's selection files into sound selection files — to_sound_selection","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/Rraven/reference/to_sound_selection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Raven's selection files into sound selection files — to_sound_selection","text":"","code":"{  #load data  data(selection_files)  # save 'Raven' selection tables in the temporary directory out <- lapply(1:2, function(x) writeLines(selection_files[[x]], con = file.path(tempdir(), names(selection_files)[x])))  # try drag and drop selection files into Raven (shouldn't work)  # now convert files to_sound_selection(sound.file.path = tempdir(),  sound.file.col = \"Begin Path\", path = tempdir())  # try drag and drop into Raven again (should work now) } #> 'sound.file.col' not found in at least 1 selection file"},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"version-1014","dir":"Changelog","previous_headings":"","what":"Version 1.0.14","title":"Version 1.0.14","text":"CRAN release: 2024-08-19","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"changes-and-additions-1-0-14","dir":"Changelog","previous_headings":"","what":"Changes and additions","title":"Version 1.0.14","text":"Fix error selection files “selections” column Fix error selection files rows. Now omitted shown unread = TRUE","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"version-1013","dir":"Changelog","previous_headings":"","what":"Version 1.0.13","title":"Version 1.0.13","text":"CRAN release: 2021-04-21 Update requested CRAN","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"version-1012","dir":"Changelog","previous_headings":"","what":"Version 1.0.12","title":"Version 1.0.12","text":"CRAN release: 2021-03-09 Update requested CRAN","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"version-1011","dir":"Changelog","previous_headings":"","what":"Version 1.0.11","title":"Version 1.0.11","text":"CRAN release: 2021-01-28 Update requested CRAN","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"version-1010","dir":"Changelog","previous_headings":"","what":"Version 1.0.10","title":"Version 1.0.10","text":"CRAN release: 2020-06-08 Update requested CRAN","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"version-109","dir":"Changelog","previous_headings":"","what":"Version 1.0.9","title":"Version 1.0.9","text":"CRAN release: 2020-02-12","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"changes-and-additions-1-0-9","dir":"Changelog","previous_headings":"","what":"Changes and additions","title":"Version 1.0.9","text":"Fix bug raven_batch_detec() reading output Raven files Added ‘wave.object’ argument return single wave object ‘exp_est()’","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"version-108","dir":"Changelog","previous_headings":"","what":"Version 1.0.8","title":"Version 1.0.8","text":"CRAN release: 2019-11-02 Package resubmission requested CRAN","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"version-107","dir":"Changelog","previous_headings":"","what":"Version 1.0.7","title":"Version 1.0.7","text":"CRAN release: 2019-09-03","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"changes-and-additions-1-0-7","dir":"Changelog","previous_headings":"","what":"Changes and additions","title":"Version 1.0.7","text":"changes required CRAN saving files examples imp_raven() error message selections sound file name column","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"version-106","dir":"Changelog","previous_headings":"","what":"Version 1.0.6","title":"Version 1.0.6","text":"CRAN release: 2019-05-23","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"changes-and-additions-1-0-6","dir":"Changelog","previous_headings":"","what":"Changes and additions","title":"Version 1.0.6","text":"unique names temporal .txt output files allow parallelization ‘raven_batch_detec()’ new arguments ‘imp_raven()’: ‘warbler.format’ importing warbleR selection table column names, ‘.spectro.view’ keeping measurements spectrogram view ‘files’ importing specific selection files","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"version-105","dir":"Changelog","previous_headings":"","what":"Version 1.0.5","title":"Version 1.0.5","text":"CRAN release: 2019-03-05","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"new-functions-1-0-5","dir":"Changelog","previous_headings":"","what":"New functions","title":"Version 1.0.5","text":"exp_empty_sels: export ‘Raven’ selection sound files folder","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"changes-and-additions-1-0-5","dir":"Changelog","previous_headings":"","what":"Changes and additions","title":"Version 1.0.5","text":"bug fix ‘raven_batch_detec()’ using custom made detectors bug fix ‘extract_ts()’ 1 value values Raven frequency contours","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"version-104","dir":"Changelog","previous_headings":"","what":"Version 1.0.4","title":"Version 1.0.4","text":"CRAN release: 2018-09-29","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"changes-and-additions-1-0-4","dir":"Changelog","previous_headings":"","what":"Changes and additions","title":"Version 1.0.4","text":"‘detector.name’, ‘detector.preset’ ‘view.preset’ arguments added ‘raven_batch_detec()’ allow use custom made detectors","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"version-103","dir":"Changelog","previous_headings":"","what":"Version 1.0.3","title":"Version 1.0.3","text":"CRAN release: 2018-05-22","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"new-functions-1-0-3","dir":"Changelog","previous_headings":"","what":"New functions","title":"Version 1.0.3","text":"to_sound_selection: convert Raven’s selection table files sound selection table files","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"version-102","dir":"Changelog","previous_headings":"","what":"Version 1.0.2","title":"Version 1.0.2","text":"CRAN release: 2018-03-11","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"new-functions-1-0-2","dir":"Changelog","previous_headings":"","what":"New functions","title":"Version 1.0.2","text":"to_sound_selection: convert Raven’s selection table files sound selection table files sort_colms: sort columns intuitive order match_wav_case: corrects case extension name sound files","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"changes-and-additions-1-0-2","dir":"Changelog","previous_headings":"","what":"Changes and additions","title":"Version 1.0.2","text":"‘rm_dup’ argument remove duplicated rows ‘imp_raven’ function Small changes vignette table appearance Parallel progress bar available ‘imp_raven’ function ‘hz..khz’ ‘khz..hz’ arguments available ‘relabel_colms’ function","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"version-101","dir":"Changelog","previous_headings":"","what":"Version 1.0.1","title":"Version 1.0.1","text":"CRAN release: 2018-02-11","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"changes-and-additions-1-0-1","dir":"Changelog","previous_headings":"","what":"Changes and additions","title":"Version 1.0.1","text":"Small changes vignette table appearance","code":""},{"path":"https://marce10.github.io/Rraven/news/index.html","id":"version-100","dir":"Changelog","previous_headings":"","what":"Version 1.0.0","title":"Version 1.0.0","text":"CRAN release: 2017-11-21 First release","code":""}]
